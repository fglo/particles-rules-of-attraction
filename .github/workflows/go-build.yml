name: Go Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        cache: true

    - name: Install dependencies
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libasound2-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev libc6-dev gcc-multilib
        version: 1.0

    - name: Test
      run: go test -v ./...

    - name: Build
      run: go build -v ./...

    - name: Build (Linux)
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      run: |
        CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o particlelifesim-linux-arm64 cmd/particlelifesim/main.go
        CGO_ENABLED=1 GOOS=linux GOARCH=386 go build -o particlelifesim-linux-arm64 cmd/particlelifesim/main.go

    - name: Build (macOS)
      if: ${{ startsWith(matrix.os, 'macos-') }}
      run: |
        CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -o particlelifesim-macos-amd64 cmd/particlelifesim/main.go
        CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -o particlelifesim-macos-arm64 cmd/particlelifesim/main.go

    - name: Build (Windows)
      if: ${{ startsWith(matrix.os, 'windows-') }}
      run: |
        GOOS=windows GOARCH=amd64 go build -o particlelifesim-windows-amd64 cmd/particlelifesim/main.go
        GOOS=windows GOARCH=386 go build -o particlelifesim-windows-amd cmd/particlelifesim/main.go

    - name: Build (Wasm)
      run: |
        GOOS=js GOARCH=wasm go build -tags wasm -o static/main.wasm cmd/particlelifesim/main.go

name: goreleaser

on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  # packages: write
  # issues: write

jobs:
  goreleaser:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - run: git fetch --force --tags

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        cache: true

    - name: Install dependencies
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libasound2-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev
        version: 1.0

    - name: Release
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      uses: goreleaser/goreleaser-action@v2
      with:
        distribution: goreleaser
        version: latest
        args: release -f .github/.goreleaser.linux.yml --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      if: ${{ startsWith(matrix.os, 'macos-') }}
      uses: goreleaser/goreleaser-action@v2
      with:
        distribution: goreleaser
        version: latest
        args: release -f .github/.goreleaser.macos.yml --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      if: ${{ startsWith(matrix.os, 'windows-') }}
      uses: goreleaser/goreleaser-action@v2
      with:
        distribution: goreleaser
        version: latest
        args: release -f .github/.goreleaser.windows.yml --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
